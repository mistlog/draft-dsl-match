// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`return object 1`] = `
"MatchDSL(value).with(2, x => {
  return {
    type: 'image'
  };
}).when((value: any) => value === 3, () => {
  return \\"number: 3\\";
}).run()"
`;

exports[`specify factory 1`] = `
"match(value).with(2, () => {
  return 30;
}).run()"
`;

exports[`specify input and output type 1`] = `
"MatchDSL<number, number>(value).with(2, () => {
  return 30;
}).run()"
`;

exports[`specify only input type 1`] = `
"MatchDSL<number>(value).with(2, () => {
  return 30;
}).run()"
`;

exports[`use expression 1`] = `
"MatchDSL(input).when(() => {
  return is3(input);
}, () => {
  return 'temp';
}).when(() => {
  return input === 3;
}, () => {
  return 'temp';
}).with(__, () => {
  return 6;
}).run()"
`;

exports[`use handler 1`] = `
"MatchDSL(['get', 2]).with(['get', as('value')], (_: any, {
  value
}: any) => value * 2).run()"
`;

exports[`use handler without param 1`] = `"MatchDSL(value).with(2, () => 30).run()"`;

exports[`use not 1`] = `
"MatchDSL(value).with(not(2), () => {
  return 30;
}).run()"
`;

exports[`value only 1`] = `
"MatchDSL(value).with(2, () => {
  return 30;
}).with('temp', () => {
  return 'temp';
}).with(string_type, () => {
  return \`value is \${value}\`;
}).with({
  type: 'image'
}, () => {
  return 'type is image';
}).run()"
`;
