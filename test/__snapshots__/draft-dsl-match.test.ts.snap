// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test dsl match dsl.match.default 1`] = `
"function Test(value: number) {
  if (value === 1) {
    console.log(1);
  } else {
    console.log(2);
  }
}"
`;

exports[`test dsl match dsl.match.enum 1`] = `
"function Test(value: Event) {
  if (value === Event.EventA) {
    console.log(1);
  } else if (value === Event.EventB) {
    console.log(\\"a\\");
  }
}"
`;

exports[`test dsl match dsl.match.inline-context 1`] = `
"{
  if (value === \\"a\\" || value === \\"b\\") {
    console.log(\\"string\\");
  } else if (value === 1 || value === 2) {
    console.log(\\"number\\");
  }
}"
`;

exports[`test dsl match dsl.match.inline-context: merge 1`] = `
"if (value === \\"a\\" || value === \\"b\\") {
  console.log(\\"string\\");
} else if (value === 1 || value === 2) {
  console.log(\\"number\\");
}"
`;

exports[`test dsl match dsl.match.instanceof 1`] = `
"function Test(value: ClassA | ClassB) {
  if (value instanceof ClassA) {
    console.log(\\"class A\\");
  } else if (value instanceof ClassB) {
    console.log(\\"class B\\");
  }
}"
`;

exports[`test dsl match dsl.match.number 1`] = `
"function Test(value: number) {
  if (value === 1) {
    console.log(1);
  } else if (value === 2) {
    console.log(2);
  } else if (value === 3) {
    console.log(3);
  }
}"
`;

exports[`test dsl match dsl.match.or 1`] = `
"function Test(value: any) {
  if (value === \\"a\\" || value === \\"b\\") {
    console.log(\\"string\\");
  } else if (value === 1 || value === 2) {
    console.log(\\"number\\");
  } else if (value === Event.A || value === Event.B) {
    console.log(\\"enum\\");
  }
}"
`;

exports[`test dsl match dsl.match.string 1`] = `
"function Test(value: string) {
  if (value === \\"a\\") {
    console.log(\\"a\\");
  } else if (value === \\"b\\") {
    console.log(\\"b\\");
  }
}"
`;

exports[`test dsl match dsl.match: return block statement 1`] = `
"function Test(value: number) {
  if (value === 1) {
    console.log(1);
  } else {
    <HandleSomething />;
  }
}"
`;
